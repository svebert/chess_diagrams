name: Simulate Chess Legality

on:
  workflow_dispatch:  # Nur manuell startbar

jobs:
  # === 1️⃣ Generate material classes ===
  generate_material:
    runs-on: ubuntu-latest
    outputs:
      segments: ${{ steps.split.outputs.segments }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy pyarrow tqdm python-chess

      - name: Generate material classes
        run: |
          mkdir -p dist
          python material_classes.py --output-parquet dist/material_classes.parquet

      - name: Determine class count and split into 4 segments
        id: split
        run: |
          python - <<'PYCODE'
          import pandas as pd, math, json
          df = pd.read_parquet("dist/material_classes.parquet")
          total = len(df)
          chunk = math.ceil(total / 4)
          ranges = [f"{i*chunk}-{min((i+1)*chunk, total)}" for i in range(4)]
          print(f"Found {total} classes, ranges: {ranges}")
          print(f"::set-output name=segments::{json.dumps(ranges)}")
          PYCODE

      - name: Upload material parquet
        uses: actions/upload-artifact@v4
        with:
          name: material-classes
          path: dist/material_claaaes.parquet

  # === 2️⃣ Run legality simulation in parallel ===
  simulate_legality:
    needs: generate_material
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.generate_material.outputs.segments) }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download material parquet
        uses: actions/download-artifact@v4
        with:
          name: material-classes
          path: dist

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy pyarrow tqdm python-chess

      - name: Run legality simulation
        run: |
          mkdir -p dist/legality_parts
          START=$(echo "${{ matrix.segment }}" | cut -d'-' -f1)
          END=$(echo "${{ matrix.segment }}" | cut -d'-' -f2)
          python simulate_legality.py \
            --input dist/material_claaaes.parquet \
            --output dist/legality_parts/legality_part_${START}_${END}.parquet \
            --start-id $START \
            --end-id $END \
            --no-promotion

      - name: Upload partial results
        uses: actions/upload-artifact@v4
        with:
          name: legality-part-${{ matrix.segment }}
          path: dist/legality_parts/*.parquet

  # === 3️⃣ Merge all partial results ===
  merge_results:
    needs: simulate_legality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download all partial results
        uses: actions/download-artifact@v4
        with:
          path: dist/legality_parts

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas pyarrow

      - name: Merge parquet files
        run: |
          python merge_legality_results.py \
            --input-dir dist/legality_parts \
            --output dist/legality_results.parquet

      - name: Upload merged result
        uses: actions/upload-artifact@v4
        with:
          name: merged-legality-results
          path: dist/legality_results.parquet
